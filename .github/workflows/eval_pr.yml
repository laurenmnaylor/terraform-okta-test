name: 'Pull Request'

on:
  pull_request:
    types: [opened]

jobs:       
  changedfiles:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v1
#        with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
#         terraform_version: 1.6.0
#      - name: Terraform Init
#        run: terraform init
#      - name: Terraform Plan
#        continue-on-error: true
#        env:
#          TF_VAR_org_name: ${{ vars.TF_VAR_org_name }}
#          TF_VAR_base_url: ${{ vars.TF_VAR_base_url }}
#          TF_VAR_api_token: ${{ secrets.TF_VAR_api_token }}
#          TF_VAR_env: 'dev'
#        run: |
#          terraform plan -input=false -detailed-exitcode
#          echo "plan_output=$?" >> $GITHUB_ENV
      - name: Check Approvals
#        if: ${{ env.plan_output }} == 2
        env:
          GH_TOKEN: ${{ secrets.ORG_TOKEN }}
        run: |
          git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} >> diffs.txt
          cat diffs.txt | while read line
          do
            echo "([^\/]|^)$line" >> diffs_regex.txt
          done
          echo "DIFFS_REGEX.TXT"
          cat diffs_regex.txt
       
          cat .github/CODEOWNERS-custom | while read line
          do
            echo $line >> codeowners.txt
          done
          echo "CODEOWNERS.TXT"
          cat codeowners.txt

          echo "GREP"
          grep -Eof diffs_regex.txt codeowners.txt
          
          if ! grep -Ef diffs_regex.txt codeowners.txt | grep -o "@\S*" >> required_reviewers.txt; then
            echo "No matches" >> required_reviewers.txt
          fi
          sed -i 's/@//g' required_reviewers.txt
          echo "REQUIRED_REVIEWERS.TXT"  
          cat required_reviewers.txt
          
          reviews=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/laurenmnaylor/terraform-okta-test/pulls/${{ github.event.pull_request.number }}/reviews)
          echo "$reviews" | jq 'sort_by(.user.login, .submitted_at) | reverse | unique_by(.user.login) | map(select(.state=="APPROVED")) | .[].user.login' >> approvers.txt
          sed -i 's/"//g' approvers.txt
          echo "APPROVERS.TXT"
          cat approvers.txt

          cat > approvers_teams.txt
          cat approvers.txt | while read line
          do
         
            gh api graphql -f query='query GetTeamMembers {
              organization(login: "Eaton-Vance-Corp") {
              teams(first: 100, userLogins: ["'"$line"'"]) {
                totalCount
                  edges {
                    node {
                      slug
                    }
                  }
                }
              }
         
              }' | jq '.data.organization.teams.edges[].node.slug' >> approvers_teams.txt
          done
          sed -i 's/"//g' approvers_teams.txt
          cat approvers.txt approvers_teams.txt >> approvers_all.txt
          
          echo "RUNNING COMM"
          comm -13 <(sort -u approvers_all.txt) <(sort -u required_reviewers.txt) >> missing_reviewers.txt

          echo "MISSING REVIEWERS"
          cat missing_reviewers.txt

          if [ -s missing_reviewers.txt ]; then
            echo "The following approvals are still needed:"
            cat missing_reviewers.txt
            exit 1;
          else
            echo "All required approvals have been given"
          fi
