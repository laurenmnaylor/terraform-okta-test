name: 'Pull Request'

on:
  pull_request:
  pull_request_review:
    types: [submitted]

permissions: write-all

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all}}
    steps:
        # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # Set outputs using the command.
        run: |
         
          diffs=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} >> diffs.txt

          echo "DIFFS.TXT"
          cat diffs.txt
       
          echo "all=$((git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}) | xargs)" >> $GITHUB_OUTPUT
         
       
          cat .github/CODEOWNERS-custom | while read line
          do
            echo $line >> tmp.txt
          done
          echo "TMP.TXT"
          cat tmp.txt


          grep -f diffs.txt tmp.txt | grep -o "@\S*" >> required_reviewers.txt

          echo "REQUIRED_REVIEWERS.TXT"  
          cat required_reviewers.txt
        
          
          reviews=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/laurenmnaylor/terraform-okta-test/pulls/${{ github.event.pull_request.number }}/reviews)
          echo "$reviews" | jq 'sort_by(.user.login, .submitted_at) | reverse | unique_by(.user.login) | map(select(.state=="APPROVED")) | .[].user.login'
          echo "$reviews" | jq 'sort_by(.user.login, .submitted_at) | reverse | unique_by(.user.login) | map(select(.state=="APPROVED")) | .[].user.login' >> approvers.txt

          echo "APPROVERS.TXT"
          cat approvers.txt


          
          echo "RUNNING COMM"
          comm -13 <(sort -u approvers.txt) <(sort -u required_reviewers.txt)

          #teams=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" orgs/Eaton-Vance-Corp/teams/aws-iam-admins/members)
          #echo "$teams"

          gh api graphql -f query='query GetTeamMembers {
            organization(login: "Eaton-Vance-Corp") {
            teams(first: 100, userLogins: ["ccipolla"]) {
            totalCount
              edges {
                node {
                  name
                  description
                }
              }
            }
          }
          }'
          rm tmp.txt
          
  lint:
    runs-on: ubuntu-latest
    # require the first job to have ran
    needs: changedfiles
    # only run there are changed files
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: echo changed files
        run: |
          echo ${{needs.changedfiles.outputs.all}}
          for item in ${{needs.changedfiles.outputs.all}}; do
            echo "$item"
          done
