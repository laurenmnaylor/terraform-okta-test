name: 'Run Script'

on:
  workflow_dispatch:

jobs:
  generate-jwt:
    runs-on: ubuntu-latest
    permissions: write-all
    environment: 'generate jwt'
    outputs:
      jwt: ${{ steps.generate-jwt.outputs.jwt }}
    steps:
      # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get changed files
        id: generate-jwt
        run: |
          cd js
          npm init -y
          npm install
          npm i njwt
          npm ci
          token=$(node generate-jwt.js "${{ secrets.TF_VAR_private_key }}" "0oah96zm3mSlrHKV05d7" "dev-86564089.okta.com")
          echo $token >> token.txt
          cat token.txt
          echo "jwt=$(echo $token | base64 -w0 | base64 -w0)" >> $GITHUB_OUTPUT
          
  deploy:
    name: 'Get Okta Resource ID'
    environment: 'generate jwt'
    runs-on: ubuntu-latest
    needs: [ generate-jwt ]
    steps:
      - name: Get Resource ID
        run: |
          jwt=${{ needs.generate-jwt.outputs.jwt }}
          jtoken=$(echo $jwt | sed 's/=.*//g')
          token=$(echo ${jtoken#*=} | base64 -di | base64 -di)
          echo "JWT"
          echo $token
          declare okta_url="https://dev-86564089.okta.com/api/v1"
          declare result=""
          declare url=""
          declare jq_filter=""
          
          url="$okta_url/apps"
          jq_filter="jq"
          
          
          cat > curl2.sh
          chmod +x curl2.sh
          
          echo "curl -s -D headers.txt -X GET -H \"Accept: application/json\" -H \"Content-Type: application/json\" -H \"Authorization: Bearer $token\" \"${url}\"" > curl2.sh
          cat curl2.sh
          ./curl2.sh >> results.txt
          cat results.txt